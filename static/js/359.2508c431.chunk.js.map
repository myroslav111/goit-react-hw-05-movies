{"version":3,"file":"static/js/359.2508c431.chunk.js","mappings":"yRAEaA,EAAOC,EAAAA,EAAAA,GAAH,0FAgBJC,GAVyBD,EAAAA,EAAAA,IAAH,iLAUNA,EAAAA,EAAAA,GAAH,iWAiBbE,EAAMF,EAAAA,EAAAA,IAAH,6KAUHG,EAAgBH,EAAAA,EAAAA,IAAH,kR,uCCO1B,EA5Ca,WACX,IAAQI,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,6GAE0BC,EAAAA,EAAAA,aAAoBN,GAF9C,OAESO,EAFT,OAGGH,EAAQG,GAHX,gDAKGC,EAAAA,GAAAA,MAAY,KAAMC,SALrB,wDAAD,KAQC,CAACT,IAEAG,GACFO,EAAAA,GAAAA,WAAyB,MAGzB,8BACGP,IACC,SAACR,EAAD,UACGQ,EAAKQ,KAAI,YAAqD,IAAlDC,EAAiD,EAAjDA,aAAcC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,UAAWC,EAAS,EAATA,GAC7CC,EAAMJ,EAAY,yCACcA,GAClCK,EAAAA,EACJ,OACE,UAACpB,EAAD,YACE,SAACC,EAAD,CAAKoB,IAAKF,EAAKG,IAAI,yBACnB,SAACpB,EAAD,WACE,4BACE,wBAAKc,KACL,wBAAKC,GAAa,0BALJC,Y,mBChClC,IAFE,8H,yECCIK,EAAU,mCACVC,EAAM,gDACNC,EAAqB,4CACrBC,EAAmB,qC,aAGzB,O,oBAAA,6FACEC,IAAAA,SAAAA,OAAwB,CACtBC,QAASL,EACTM,SAAU,SAHd,kBAM2BF,IAAAA,IAAA,UAAaH,IANxC,uBAMYM,EANZ,EAMYA,KANZ,kBAQWA,EAAKC,SARhB,gH,aAaA,O,oBAAA,WAA6BC,GAA7B,gFACEL,IAAAA,SAAAA,OAAwB,CACtBC,QAASL,EACTM,SAAU,QACVI,MAAM,GAAD,OAAKD,IAJd,kBAO2BL,IAAAA,IAAA,UAAaF,IAPxC,uBAOYK,EAPZ,EAOYA,KAPZ,kBAQWA,EAAKC,SARhB,gH,aAaA,O,oBAAA,WAA2Bb,GAA3B,gFACES,IAAAA,SAAAA,OAAwB,CACtBC,QAASL,EACTM,SAAU,SAHd,kBAM2BF,IAAAA,IAAA,UAAaD,EAAb,YAAiCR,IAN5D,uBAMYY,EANZ,EAMYA,KANZ,kBAQWA,GARX,gH,aAaA,O,oBAAA,WAAgCZ,GAAhC,gFACES,IAAAA,SAAAA,OAAwB,CACtBC,QAASL,EACTM,SAAU,SAHd,kBAM2BF,IAAAA,IAAA,UAAaD,EAAb,YAAiCR,EAAjC,aAN3B,uBAMYY,EANZ,EAMYA,KANZ,kBAOWA,EAAKxB,MAPhB,gHAYe4B,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAkChB,GAAlC,gFACES,IAAAA,SAAAA,OAAwB,CACtBC,QAASL,EACTM,SAAU,QACVM,KAAM,GAJV,kBAO2BR,IAAAA,IAAA,UAAaD,EAAb,YAAiCR,EAAjC,aAP3B,uBAOYY,EAPZ,EAOYA,KAPZ,kBAQWA,EAAKC,SARhB,gHAYA,IAAMtB,EAAS,CACb2B,Q,WAhEaC,OAAAA,EAAAA,MAAAA,KAAAA,YAiEbC,UApDF,SAa2B,GAAZC,OAAAA,EAAAA,MAAAA,KAAAA,YAwCbC,WA3BF,SAYkC,GAAnBN,OAAAA,EAAAA,MAAAA,KAAAA,YAgBbO,aAzCF,SAagC,GAAjBC,OAAAA,EAAAA,MAAAA,KAAAA,YA6BbC,gBApEF,SAa6B,GAAdC,OAAAA,EAAAA,MAAAA,KAAAA,aA0Df","sources":["components/MovieDetails/Cast/Cast.styled.jsx","components/MovieDetails/Cast/Cast.jsx","components/defaultImg/index.jsx","service/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Wrap = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nexport const ContainerPopularCinema = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  max-width: 100%;\n  margin-left: auto;\n  margin-right: auto;\n  justify-content: center;\n  padding-top: 60px;\n`;\n\nexport const CardCharacter = styled.li`\n  background: #fff;\n  box-shadow: 0 6px 18px rgb(0 0 0 / 10%);\n  width: 100%;\n  max-width: 200px;\n  margin: 0.5em;\n  border-radius: 10px;\n  display: inline-block;\n  text-decoration: none;\n  color: black;\n  &:hover {\n    cursor: pointer;\n    transform: scale(1.03);\n    box-shadow: 0 10px 25px rgb(0 0 0 / 8%);\n  }\n`;\n\nexport const Img = styled.img`\n  padding: 0;\n  margin: 0;\n  height: 260px;\n  width: 100%;\n  display: block;\n  border-top-left-radius: 10px;\n  border-top-right-radius: 10px;\n`;\n\nexport const CharacterName = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n  padding: 5px;\n  margin: 0;\n  font-size: 9px;\n  div {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    h3 {\n      margin: 0;\n    }\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useOutletContext } from 'react-router-dom';\nimport apiGet from 'service/api';\nimport { CardCharacter, Img, CharacterName, Wrap } from './Cast.styled';\nimport def from 'components/defaultImg';\nimport { animateScroll } from 'react-scroll';\nimport { toast } from 'react-toastify';\n\nconst Cast = () => {\n  const { movieId } = useOutletContext();\n  const [cast, setCast] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const dataCast = await apiGet.getCharacter(movieId);\n        setCast(dataCast);\n      } catch (error) {\n        toast.error(error.message);\n      }\n    })();\n  }, [movieId]);\n\n  if (cast) {\n    animateScroll.scrollMore(400);\n  }\n  return (\n    <>\n      {cast && (\n        <Wrap>\n          {cast.map(({ profile_path, original_name, character, id }) => {\n            const img = profile_path\n              ? `https://image.tmdb.org/t/p/w500${profile_path}`\n              : def;\n            return (\n              <CardCharacter key={id}>\n                <Img src={img} alt=\"poster of character\" />\n                <CharacterName>\n                  <div>\n                    <h3>{original_name}</h3>\n                    <h3>{character || 'хз))'}</h3>\n                  </div>\n                </CharacterName>\n              </CardCharacter>\n            );\n          })}\n        </Wrap>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","const def =\n  'https://www.boredpanda.com/blog/wp-content/uploads/2017/09/saddest-cat-luhu-maggie-liu-lanlan731-38-59c0bfed09657__700.jpg';\n\nexport default def;\n","import axios from 'axios';\n\nconst API_KEY = '44d416356c22cc8e7735ee915c193364';\nconst URL = 'https://api.themoviedb.org/3/trending/all/day';\nconst URL_SEARCH_BY_NAME = 'https://api.themoviedb.org/3/search/movie';\nconst URL_SEARCH_BY_ID = 'https://api.themoviedb.org/3/movie';\n\n// get popular cinema\nasync function getDataPopularCinema() {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'uk-UA',\n  };\n  try {\n    const { data } = await axios.get(`${URL}`);\n    // console.log(data);\n    return data.results;\n  } catch (error) {}\n}\n\n// поиск по name фильма на апи themoviedb\nasync function getDataByName(name) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'uk-UA',\n    query: `${name}`,\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_BY_NAME}`);\n    return data.results;\n  } catch (error) {}\n}\n\n// get by id cinema\nasync function getDataById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'uk-UA',\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_BY_ID}/${id}`);\n\n    return data;\n  } catch (error) {}\n}\n\n// search actor by id\nasync function getDataActorById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'uk-UA',\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_BY_ID}/${id}/credits`);\n    return data.cast;\n  } catch (error) {}\n}\n\n// search reviews by id\nasync function getDataReviewsById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    page: 1,\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_BY_ID}/${id}/reviews`);\n    return data.results;\n  } catch (error) {}\n}\n\nconst apiGet = {\n  popular: getDataPopularCinema,\n  movieById: getDataById,\n  getReviews: getDataReviewsById,\n  getCharacter: getDataActorById,\n  getCinemaByName: getDataByName,\n};\n\nexport default apiGet;\n"],"names":["Wrap","styled","CardCharacter","Img","CharacterName","movieId","useOutletContext","useState","cast","setCast","useEffect","apiGet","dataCast","toast","message","animateScroll","map","profile_path","original_name","character","id","img","def","src","alt","API_KEY","URL","URL_SEARCH_BY_NAME","URL_SEARCH_BY_ID","axios","api_key","language","data","results","name","query","getDataReviewsById","page","popular","getDataPopularCinema","movieById","getDataById","getReviews","getCharacter","getDataActorById","getCinemaByName","getDataByName"],"sourceRoot":""}