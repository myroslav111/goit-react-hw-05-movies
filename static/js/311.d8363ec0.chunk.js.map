{"version":3,"file":"static/js/311.d8363ec0.chunk.js","mappings":"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","sources":["components/Movie/Movie.styled.jsx","components/Movie/Movie.jsx","components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx","service/api.js","../node_modules/@emotion/react/dist/emotion-react.browser.esm.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { css } from '@emotion/react';\n\nconst dynamicStyle = props =>\n  css`\n    background: url(${props.p}) 70% 0%;\n  `;\n\nexport const Head = styled.div`\n  ${dynamicStyle};\n  position: relative;\n  width: 100%;\n  background-attachment: fixed;\n  background-size: cover;\n  color: #fff;\n  display: flex;\n  height: 52vh;\n  justify-content: center;\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    background: rgba(0, 0, 0, 0.5);\n  }\n  &:after {\n    content: '';\n    position: absolute;\n    right: -10px;\n    bottom: -1px;\n    border-left-color: #fff;\n    border-left-style: solid;\n    border-left-width: calc(100vw + 10px);\n    border-top: 12vw solid transparent;\n  }\n  button {\n    height: 30px;\n    width: 40px;\n    z-index: 100;\n    position: fixed;\n    left: 232px;\n    top: 5px;\n\n    background: transparent;\n    color: black;\n    box-shadow: 0 0 25px rgb(0 0 0 / 10%), inset 0 0 1px rgb(255 255 255 / 60%);\n    padding: 0px;\n    outline: inherit;\n    border-radius: 2px;\n    text-align: center;\n    border: 0px;\n    text-decoration: none;\n    font-family: 'Amatic SC', cursive;\n    line-height: 24px;\n    font-style: normal;\n    font-weight: 500;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    z-index: 100;\n    cursor: pointer;\n    width: 100px;\n    border-radius: 8px;\n    line-height: 50px;\n    transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    font-size: 15px;\n    height: 50px;\n    &:hover {\n      background: #ff6b08;\n      font-size: 20px;\n    }\n  }\n`;\n\nexport const WrapContent = styled.div`\n  display: flex;\n  padding: 0 30px 30px 30px;\n  /* background-image: url('https://png.pngtree.com/thumb_back/fh260/background/20200714/pngtree-modern-double-color-futuristic-neon-background-image_351866.jpg'); */\n`;\n\nexport const Img = styled.img`\n  width: 300px;\n`;\n\nexport const TextContent = styled.div`\n  padding-left: 15px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  h1 {\n    font-size: 20px;\n  }\n  p {\n    display: flex;\n  }\n  p span {\n    margin-left: 10px;\n    color: white;\n    width: 50px;\n    height: 20px;\n    border-radius: 8px;\n    background-color: #ff6b08;\n    display: flex;\n    justify-content: center;\n    box-shadow: 0 10px 20px #ff6b08;\n  }\n`;\n","import { WrapContent, Img, TextContent, Head } from './Movie.styled';\nimport { useNavigate } from 'react-router-dom';\n\nconst Movie = ({ dataCinema }) => {\n  const {\n    backdrop_path,\n    title,\n    original_title,\n    vote_average,\n    poster_path,\n    release_date,\n    overview,\n    genres,\n  } = dataCinema;\n\n  const genresCinema = genres.map(gen => gen.name + ' ');\n  // Функция navigateимеет две подписи:\n  // Хук возвращает функцию, которая позволяет программно перемещаться\n  const navigate = useNavigate();\n\n  return (\n    <>\n      <Head p={`https://image.tmdb.org/t/p/w500${backdrop_path}`}>\n        <button\n          type=\"button\"\n          onClick={() => {\n            navigate('/');\n          }}\n        >\n          {/* location?.state?.from?.pathname ?? */}\n          Back\n        </button>\n      </Head>\n      <WrapContent>\n        <Img src={`https://image.tmdb.org/t/p/w500${poster_path}`} alt=\"\" />\n        <TextContent>\n          <h1>\n            {title || original_title}\n            <span> ({release_date})</span>\n          </h1>\n          <p>\n            User score <span> {vote_average}</span>\n          </p>\n          <h3>Overview</h3>\n          <p>{overview || 'нажаль опис поки в розробці'}</p>\n          <h3>Genres</h3>\n          <p>{genresCinema}</p>\n        </TextContent>\n      </WrapContent>\n    </>\n  );\n};\nexport default Movie;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Wrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 0 0 30px 30px;\n\n  h2 {\n    margin: 0;\n    font-size: 25px;\n  }\n`;\n\nexport const NavLinkStyled = styled(NavLink)``;\n","import { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport apiGet from 'service/api';\nimport Movie from 'components/Movie/Movie';\nimport { Wrap, NavLinkStyled } from './MovieDetails.styled';\nimport { Circles } from 'react-loader-spinner';\nimport { WrapSpiner } from 'components/App.styled';\nimport { toast } from 'react-toastify';\n\nconst MovieDetails = () => {\n  //Хук useParamsвозвращает объект пар ключ/значение динамических параметров из текущего URL-адреса, которые были сопоставлены <Route path>.\n  const { movieId } = useParams();\n\n  const [movie, setMovie] = useState(null);\n\n  //Этот хук возвращает текущий locationобъект.\n  const location = useLocation();\n\n  useEffect(() => {\n    (async () => {\n      const movieObj = await apiGet.movieById(movieId);\n      setMovie(movieObj);\n      // console.log(movieObj);\n\n      try {\n      } catch (error) {\n        toast.error(error.message);\n      }\n    })();\n  }, [movieId]);\n\n  return (\n    <>\n      {movie && <Movie dataCinema={movie} />}\n      {movie && (\n        <Wrap>\n          <h2>Additional information</h2>\n          <NavLinkStyled to=\"cast\" state={{ from: location }}>\n            Cast\n          </NavLinkStyled>\n          <NavLinkStyled to=\"reviews\" state={{ from: location }}>\n            Reviews\n          </NavLinkStyled>\n        </Wrap>\n      )}\n\n      <Suspense\n        fallback={\n          <WrapSpiner>\n            <Circles\n              height=\"80\"\n              width=\"80\"\n              color=\"#ff6b08\"\n              ariaLabel=\"circles-loading\"\n              wrapperStyle={{}}\n              wrapperClass=\"\"\n              visible={true}\n            />\n          </WrapSpiner>\n        }\n      >\n        <Outlet context={{ movieId, movie }} />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = '44d416356c22cc8e7735ee915c193364';\nconst URL = 'https://api.themoviedb.org/3/trending/all/day';\nconst URL_SEARCH_BY_NAME = 'https://api.themoviedb.org/3/search/movie';\nconst URL_SEARCH_BY_ID = 'https://api.themoviedb.org/3/movie';\n\n// get popular cinema\nasync function getDataPopularCinema() {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'uk-UA',\n  };\n  try {\n    const { data } = await axios.get(`${URL}`);\n    // console.log(data);\n    return data.results;\n  } catch (error) {}\n}\n\n// поиск по name фильма на апи themoviedb\nasync function getDataByName(name) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'uk-UA',\n    query: `${name}`,\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_BY_NAME}`);\n    return data.results;\n  } catch (error) {}\n}\n\n// get by id cinema\nasync function getDataById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'uk-UA',\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_BY_ID}/${id}`);\n\n    return data;\n  } catch (error) {}\n}\n\n// search actor by id\nasync function getDataActorById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'uk-UA',\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_BY_ID}/${id}/credits`);\n    return data.cast;\n  } catch (error) {}\n}\n\n// search reviews by id\nasync function getDataReviewsById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    page: 1,\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_BY_ID}/${id}/reviews`);\n    return data.results;\n  } catch (error) {}\n}\n\nconst apiGet = {\n  popular: getDataPopularCinema,\n  movieById: getDataById,\n  getReviews: getDataReviewsById,\n  getCharacter: getDataActorById,\n  getCinemaByName: getDataByName,\n};\n\nexport default apiGet;\n","import * as React from 'react';\nimport { createElement, useLayoutEffect, useContext, useRef, Fragment } from 'react';\nimport '@emotion/cache';\nimport { h as hasOwnProperty, E as Emotion, c as createEmotionProps, w as withEmotionCache, T as ThemeContext, u as useInsertionEffectMaybe } from './emotion-element-cbed451f.browser.esm.js';\nexport { C as CacheProvider, T as ThemeContext, b as ThemeProvider, _ as __unsafe_useEmotionCache, a as useTheme, w as withEmotionCache, d as withTheme } from './emotion-element-cbed451f.browser.esm.js';\nimport '@babel/runtime/helpers/extends';\nimport '@emotion/weak-memoize';\nimport 'hoist-non-react-statics';\nimport '../_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js';\nimport { insertStyles, registerStyles, getRegisteredStyles } from '@emotion/utils';\nimport { serializeStyles } from '@emotion/serialize';\n\nvar pkg = {\n\tname: \"@emotion/react\",\n\tversion: \"11.9.3\",\n\tmain: \"dist/emotion-react.cjs.js\",\n\tmodule: \"dist/emotion-react.esm.js\",\n\tbrowser: {\n\t\t\"./dist/emotion-react.cjs.js\": \"./dist/emotion-react.browser.cjs.js\",\n\t\t\"./dist/emotion-react.esm.js\": \"./dist/emotion-react.browser.esm.js\"\n\t},\n\ttypes: \"types/index.d.ts\",\n\tfiles: [\n\t\t\"src\",\n\t\t\"dist\",\n\t\t\"jsx-runtime\",\n\t\t\"jsx-dev-runtime\",\n\t\t\"_isolated-hnrs\",\n\t\t\"types/*.d.ts\",\n\t\t\"macro.js\",\n\t\t\"macro.d.ts\",\n\t\t\"macro.js.flow\"\n\t],\n\tsideEffects: false,\n\tauthor: \"Emotion Contributors\",\n\tlicense: \"MIT\",\n\tscripts: {\n\t\t\"test:typescript\": \"dtslint types\"\n\t},\n\tdependencies: {\n\t\t\"@babel/runtime\": \"^7.13.10\",\n\t\t\"@emotion/babel-plugin\": \"^11.7.1\",\n\t\t\"@emotion/cache\": \"^11.9.3\",\n\t\t\"@emotion/serialize\": \"^1.0.4\",\n\t\t\"@emotion/utils\": \"^1.1.0\",\n\t\t\"@emotion/weak-memoize\": \"^0.2.5\",\n\t\t\"hoist-non-react-statics\": \"^3.3.1\"\n\t},\n\tpeerDependencies: {\n\t\t\"@babel/core\": \"^7.0.0\",\n\t\treact: \">=16.8.0\"\n\t},\n\tpeerDependenciesMeta: {\n\t\t\"@babel/core\": {\n\t\t\toptional: true\n\t\t},\n\t\t\"@types/react\": {\n\t\t\toptional: true\n\t\t}\n\t},\n\tdevDependencies: {\n\t\t\"@babel/core\": \"^7.13.10\",\n\t\t\"@definitelytyped/dtslint\": \"0.0.112\",\n\t\t\"@emotion/css\": \"11.9.0\",\n\t\t\"@emotion/css-prettifier\": \"1.0.1\",\n\t\t\"@emotion/server\": \"11.4.0\",\n\t\t\"@emotion/styled\": \"11.9.3\",\n\t\t\"html-tag-names\": \"^1.1.2\",\n\t\treact: \"16.14.0\",\n\t\t\"svg-tag-names\": \"^1.1.1\",\n\t\ttypescript: \"^4.5.5\"\n\t},\n\trepository: \"https://github.com/emotion-js/emotion/tree/main/packages/react\",\n\tpublishConfig: {\n\t\taccess: \"public\"\n\t},\n\t\"umd:main\": \"dist/emotion-react.umd.min.js\",\n\tpreconstruct: {\n\t\tentrypoints: [\n\t\t\t\"./index.js\",\n\t\t\t\"./jsx-runtime.js\",\n\t\t\t\"./jsx-dev-runtime.js\",\n\t\t\t\"./_isolated-hnrs.js\"\n\t\t],\n\t\tumdName: \"emotionReact\"\n\t}\n};\n\nvar jsx = function jsx(type, props) {\n  var args = arguments;\n\n  if (props == null || !hasOwnProperty.call(props, 'css')) {\n    // $FlowFixMe\n    return createElement.apply(undefined, args);\n  }\n\n  var argsLength = args.length;\n  var createElementArgArray = new Array(argsLength);\n  createElementArgArray[0] = Emotion;\n  createElementArgArray[1] = createEmotionProps(type, props);\n\n  for (var i = 2; i < argsLength; i++) {\n    createElementArgArray[i] = args[i];\n  } // $FlowFixMe\n\n\n  return createElement.apply(null, createElementArgArray);\n};\n\nvar useInsertionEffect = React['useInsertion' + 'Effect'] ? React['useInsertion' + 'Effect'] : useLayoutEffect;\nvar warnedAboutCssPropForGlobal = false; // maintain place over rerenders.\n// initial render from browser, insertBefore context.sheet.tags[0] or if a style hasn't been inserted there yet, appendChild\n// initial client-side render from SSR, use place of hydrating tag\n\nvar Global = /* #__PURE__ */withEmotionCache(function (props, cache) {\n  if (process.env.NODE_ENV !== 'production' && !warnedAboutCssPropForGlobal && ( // check for className as well since the user is\n  // probably using the custom createElement which\n  // means it will be turned into a className prop\n  // $FlowFixMe I don't really want to add it to the type since it shouldn't be used\n  props.className || props.css)) {\n    console.error(\"It looks like you're using the css prop on Global, did you mean to use the styles prop instead?\");\n    warnedAboutCssPropForGlobal = true;\n  }\n\n  var styles = props.styles;\n  var serialized = serializeStyles([styles], undefined, useContext(ThemeContext));\n  // but it is based on a constant that will never change at runtime\n  // it's effectively like having two implementations and switching them out\n  // so it's not actually breaking anything\n\n\n  var sheetRef = useRef();\n  useInsertionEffect(function () {\n    var key = cache.key + \"-global\"; // use case of https://github.com/emotion-js/emotion/issues/2675\n\n    var sheet = new cache.sheet.constructor({\n      key: key,\n      nonce: cache.sheet.nonce,\n      container: cache.sheet.container,\n      speedy: cache.sheet.isSpeedy\n    });\n    var rehydrating = false; // $FlowFixMe\n\n    var node = document.querySelector(\"style[data-emotion=\\\"\" + key + \" \" + serialized.name + \"\\\"]\");\n\n    if (cache.sheet.tags.length) {\n      sheet.before = cache.sheet.tags[0];\n    }\n\n    if (node !== null) {\n      rehydrating = true; // clear the hash so this node won't be recognizable as rehydratable by other <Global/>s\n\n      node.setAttribute('data-emotion', key);\n      sheet.hydrate([node]);\n    }\n\n    sheetRef.current = [sheet, rehydrating];\n    return function () {\n      sheet.flush();\n    };\n  }, [cache]);\n  useInsertionEffect(function () {\n    var sheetRefCurrent = sheetRef.current;\n    var sheet = sheetRefCurrent[0],\n        rehydrating = sheetRefCurrent[1];\n\n    if (rehydrating) {\n      sheetRefCurrent[1] = false;\n      return;\n    }\n\n    if (serialized.next !== undefined) {\n      // insert keyframes\n      insertStyles(cache, serialized.next, true);\n    }\n\n    if (sheet.tags.length) {\n      // if this doesn't exist then it will be null so the style element will be appended\n      var element = sheet.tags[sheet.tags.length - 1].nextElementSibling;\n      sheet.before = element;\n      sheet.flush();\n    }\n\n    cache.insert(\"\", serialized, sheet, false);\n  }, [cache, serialized.name]);\n  return null;\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Global.displayName = 'EmotionGlobal';\n}\n\nfunction css() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return serializeStyles(args);\n}\n\nvar keyframes = function keyframes() {\n  var insertable = css.apply(void 0, arguments);\n  var name = \"animation-\" + insertable.name; // $FlowFixMe\n\n  return {\n    name: name,\n    styles: \"@keyframes \" + name + \"{\" + insertable.styles + \"}\",\n    anim: 1,\n    toString: function toString() {\n      return \"_EMO_\" + this.name + \"_\" + this.styles + \"_EMO_\";\n    }\n  };\n};\n\nvar classnames = function classnames(args) {\n  var len = args.length;\n  var i = 0;\n  var cls = '';\n\n  for (; i < len; i++) {\n    var arg = args[i];\n    if (arg == null) continue;\n    var toAdd = void 0;\n\n    switch (typeof arg) {\n      case 'boolean':\n        break;\n\n      case 'object':\n        {\n          if (Array.isArray(arg)) {\n            toAdd = classnames(arg);\n          } else {\n            if (process.env.NODE_ENV !== 'production' && arg.styles !== undefined && arg.name !== undefined) {\n              console.error('You have passed styles created with `css` from `@emotion/react` package to the `cx`.\\n' + '`cx` is meant to compose class names (strings) so you should convert those styles to a class name by passing them to the `css` received from <ClassNames/> component.');\n            }\n\n            toAdd = '';\n\n            for (var k in arg) {\n              if (arg[k] && k) {\n                toAdd && (toAdd += ' ');\n                toAdd += k;\n              }\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          toAdd = arg;\n        }\n    }\n\n    if (toAdd) {\n      cls && (cls += ' ');\n      cls += toAdd;\n    }\n  }\n\n  return cls;\n};\n\nfunction merge(registered, css, className) {\n  var registeredStyles = [];\n  var rawClassName = getRegisteredStyles(registered, registeredStyles, className);\n\n  if (registeredStyles.length < 2) {\n    return className;\n  }\n\n  return rawClassName + css(registeredStyles);\n}\n\nvar Insertion = function Insertion(_ref) {\n  var cache = _ref.cache,\n      serializedArr = _ref.serializedArr;\n  var rules = useInsertionEffectMaybe(function () {\n\n    for (var i = 0; i < serializedArr.length; i++) {\n      var res = insertStyles(cache, serializedArr[i], false);\n    }\n  });\n\n  return null;\n};\n\nvar ClassNames = /* #__PURE__ */withEmotionCache(function (props, cache) {\n  var hasRendered = false;\n  var serializedArr = [];\n\n  var css = function css() {\n    if (hasRendered && process.env.NODE_ENV !== 'production') {\n      throw new Error('css can only be used during render');\n    }\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var serialized = serializeStyles(args, cache.registered);\n    serializedArr.push(serialized); // registration has to happen here as the result of this might get consumed by `cx`\n\n    registerStyles(cache, serialized, false);\n    return cache.key + \"-\" + serialized.name;\n  };\n\n  var cx = function cx() {\n    if (hasRendered && process.env.NODE_ENV !== 'production') {\n      throw new Error('cx can only be used during render');\n    }\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return merge(cache.registered, css, classnames(args));\n  };\n\n  var content = {\n    css: css,\n    cx: cx,\n    theme: useContext(ThemeContext)\n  };\n  var ele = props.children(content);\n  hasRendered = true;\n  return /*#__PURE__*/createElement(Fragment, null, /*#__PURE__*/createElement(Insertion, {\n    cache: cache,\n    serializedArr: serializedArr\n  }), ele);\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  ClassNames.displayName = 'EmotionClassNames';\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  var isBrowser = \"object\" !== 'undefined'; // #1727 for some reason Jest evaluates modules twice if some consuming module gets mocked with jest.mock\n\n  var isJest = typeof jest !== 'undefined';\n\n  if (isBrowser && !isJest) {\n    // globalThis has wide browser support - https://caniuse.com/?search=globalThis, Node.js 12 and later\n    var globalContext = // $FlowIgnore\n    typeof globalThis !== 'undefined' ? globalThis // eslint-disable-line no-undef\n    : isBrowser ? window : global;\n    var globalKey = \"__EMOTION_REACT_\" + pkg.version.split('.')[0] + \"__\";\n\n    if (globalContext[globalKey]) {\n      console.warn('You are loading @emotion/react when it is already loaded. Running ' + 'multiple instances may cause problems. This can happen if multiple ' + 'versions are used, or if multiple builds of the same version are ' + 'used.');\n    }\n\n    globalContext[globalKey] = true;\n  }\n}\n\nexport { ClassNames, Global, jsx as createElement, css, jsx, keyframes };\n"],"names":["Head","styled","props","css","p","WrapContent","Img","TextContent","dataCinema","backdrop_path","title","original_title","vote_average","poster_path","release_date","overview","genresCinema","genres","map","gen","name","navigate","useNavigate","type","onClick","src","alt","Wrap","NavLinkStyled","NavLink","movieId","useParams","useState","movie","setMovie","location","useLocation","useEffect","apiGet","movieObj","to","state","from","Suspense","fallback","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","context","API_KEY","URL","URL_SEARCH_BY_NAME","URL_SEARCH_BY_ID","axios","api_key","language","data","results","query","id","cast","getDataReviewsById","page","popular","getDataPopularCinema","movieById","getDataById","getReviews","getCharacter","getDataActorById","getCinemaByName","getDataByName","React","useLayoutEffect","_len","arguments","length","args","Array","_key","serializeStyles"],"sourceRoot":""}