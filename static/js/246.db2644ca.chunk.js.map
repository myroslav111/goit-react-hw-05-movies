{"version":3,"file":"static/js/246.db2644ca.chunk.js","mappings":"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","sources":["components/Home/CinemaCardList/CinemaCardList.styled.jsx","components/Home/Home.styled.jsx","components/Home/CinemaCardList/CinemaCardList.jsx","components/Movies/SearchBar/SearchBar.styled.jsx","components/Movies/SearchBar/SearchBar.jsx","components/Movies/Movies.styled.jsx","components/Movies/Movies.jsx","components/defaultImg/index.jsx","service/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const ContainerPopularCinema = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  max-width: 100%;\n  margin-left: auto;\n  margin-right: auto;\n  justify-content: center;\n  padding-top: 60px;\n`;\n\nexport const CardCinema = styled(Link)`\n  background: #fff;\n  box-shadow: 0 6px 18px rgb(0 0 0 / 10%);\n  width: 100%;\n  max-width: 200px;\n  margin: 0.5em;\n  border-radius: 10px;\n  display: inline-block;\n  text-decoration: none;\n  color: black;\n  &:hover {\n    cursor: pointer;\n    transform: scale(1.03);\n    box-shadow: 0 10px 25px rgb(0 0 0 / 8%);\n  }\n`;\n\nexport const Img = styled.img`\n  padding: 0;\n  margin: 0;\n  height: 260px;\n  width: 100%;\n  display: block;\n  border-top-left-radius: 10px;\n  border-top-right-radius: 10px;\n`;\n\nexport const CardCinemaBasement = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n  padding: 5px;\n  margin: 0;\n  font-size: 9px;\n`;\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h1`\n  /* margin-bottom: 50px;\n  margin-top: 50px; */\n  /* color: black; */\n  position: relative;\n  font-size: 1.3em;\n  text-transform: uppercase;\n  width: 100%;\n  text-align: center;\n  -webkit-box-reflect: below 1px linear-gradient(transparent, #0008);\n  line-height: 0.7em;\n  outline: none;\n  animation: animate 8s linear infinite;\n`;\n","import React from 'react';\nimport { useLocation, generatePath } from 'react-router-dom';\nimport {\n  ContainerPopularCinema,\n  CardCinema,\n  Img,\n  CardCinemaBasement,\n} from './CinemaCardList.styled';\nimport routePath from '../../routePath';\nimport def from 'components/defaultImg';\nimport { Title } from '../Home.styled';\n\nconst CinemaCardList = ({ films, bool }) => {\n  const location = useLocation();\n  return (\n    <ContainerPopularCinema>\n      {!bool && <Title>TRENDING TODAY</Title>}\n\n      {films.map(({ title, poster_path, name, id }) => {\n        const movieLink = generatePath(routePath.movie, {\n          movieId: id,\n        });\n        const imgSrc = poster_path\n          ? `https://image.tmdb.org/t/p/w500${poster_path}`\n          : def;\n        return (\n          <CardCinema key={id} to={movieLink} state={{ from: location }}>\n            <Img src={imgSrc} alt=\"poster of cinema\" id={id} />\n            <CardCinemaBasement>\n              <div>\n                <h3>{title || name}</h3>\n              </div>\n            </CardCinemaBasement>\n          </CardCinema>\n        );\n      })}\n    </ContainerPopularCinema>\n  );\n};\nexport default CinemaCardList;\n","import styled from '@emotion/styled';\n\nexport const Wrap = styled.div`\n  padding-top: 70px;\n  padding-left: 10px;\n  position: fixed;\n  top: -61px;\n  z-index: 100;\n`;\n\nexport const Form = styled.form`\n  outline: 0;\n  float: left;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n  border-radius: 4px;\n\n  & > input {\n    outline: 0;\n    height: 42px;\n    width: 244px;\n    line-height: 42px;\n    padding: 0 16px;\n    background-color: rgba(255, 255, 255, 0.8);\n    color: #212121;\n    border: 0;\n    float: left;\n    border-radius: 4px 0 0 4px;\n  }\n  & > input:focus {\n    outline: 0;\n    background-color: #fff;\n  }\n  & > button {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    outline: 0;\n    background: none;\n    background-color: rgba(38, 50, 56, 0.8);\n    float: left;\n    height: 42px;\n    width: 42px;\n    text-align: center;\n    line-height: 42px;\n    border: 0;\n    color: #fff;\n    font: normal normal normal 14px/1 FontAwesome;\n    font-size: 16px;\n    text-rendering: auto;\n    text-shadow: 0 1px 1px rgba(0, 0, 0, 0.2);\n    transition: background-color 0.4s ease;\n    border-radius: 0 4px 4px 0;\n  }\n  & > button:hover {\n    background-color: rgba(0, 150, 136, 0.8);\n    & > svg {\n      width: 1.4em;\n      height: 1.4em;\n    }\n  }\n  svg {\n    display: inline-block;\n    width: 1.2em;\n    height: 1.2em;\n    stroke-width: 0;\n    stroke: currentColor;\n    fill: currentColor;\n  }\n`;\n","import { useState } from 'react';\nimport { Form, Wrap } from './SearchBar.styled';\nimport { AiOutlineSearch } from 'react-icons/ai';\nimport { toast } from 'react-toastify';\n\nconst SearchBar = ({ onSubmit }) => {\n  const [name, setName] = useState('');\n\n  // забираем дату с инпута и бросаем в стейт\n  const handleNameChange = e => {\n    const newName = e.currentTarget.value.toLowerCase();\n    setName(newName);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('click');\n    const userInput = name.trim();\n    if (userInput === '') {\n      toast.error('fill in the fields');\n      return;\n    }\n\n    onSubmit(userInput);\n    // очищаем инпут\n    cleanInput();\n  };\n\n  const cleanInput = () => {\n    setName('');\n  };\n\n  return (\n    <>\n      <Wrap>\n        <Form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            placeholder=\"Search\"\n            value={name}\n            onChange={handleNameChange}\n          />\n          <button type=\"submit\">\n            <AiOutlineSearch />\n          </button>\n        </Form>\n      </Wrap>\n    </>\n  );\n};\n\nexport default SearchBar;\n","import styled from '@emotion/styled';\n\nexport const Wrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import { useState } from 'react';\nimport SearchBar from './SearchBar';\nimport apiGet from 'service/api';\nimport CinemaCardList from 'components/Home/CinemaCardList';\nimport { Wrap } from './Movies.styled';\nimport { toast } from 'react-toastify';\n\nconst Movies = () => {\n  const [cinemaObj, setCinemaObj] = useState(null);\n  const [booleanToTitle, setBooleanToTitle] = useState(false);\n\n  const handleFormSubmit = async name => {\n    try {\n      const searchCinema = await apiGet.getCinemaByName(name);\n      if (searchCinema.length === 0) {\n        toast.info(` ${name} not found!`);\n        return;\n      }\n      setCinemaObj(searchCinema);\n      setBooleanToTitle(true)\n    } catch (error) {\n      toast.error(error.message);\n    }\n  };\n\n  return (\n    <Wrap>\n      <SearchBar onSubmit={handleFormSubmit} />\n    {cinemaObj && <CinemaCardList films={cinemaObj} bool={booleanToTitle}/>}\n    </Wrap>\n  );\n};\n\nexport default Movies;\n","const def =\n  'https://www.boredpanda.com/blog/wp-content/uploads/2017/09/saddest-cat-luhu-maggie-liu-lanlan731-38-59c0bfed09657__700.jpg';\n\nexport default def;\n","import axios from 'axios';\n\nconst API_KEY = '44d416356c22cc8e7735ee915c193364';\nconst URL = 'https://api.themoviedb.org/3/trending/all/day';\nconst URL_SEARCH_BY_NAME = 'https://api.themoviedb.org/3/search/movie';\nconst URL_SEARCH_BY_ID = 'https://api.themoviedb.org/3/movie';\n\n// get popular cinema\nasync function getDataPopularCinema() {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'uk-UA',\n  };\n  try {\n    const { data } = await axios.get(`${URL}`);\n    // console.log(data);\n    return data.results;\n  } catch (error) {}\n}\n\n// поиск по name фильма на апи themoviedb\nasync function getDataByName(name) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'uk-UA',\n    query: `${name}`,\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_BY_NAME}`);\n    return data.results;\n  } catch (error) {}\n}\n\n// get by id cinema\nasync function getDataById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'uk-UA',\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_BY_ID}/${id}`);\n\n    return data;\n  } catch (error) {}\n}\n\n// search actor by id\nasync function getDataActorById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'uk-UA',\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_BY_ID}/${id}/credits`);\n    return data.cast;\n  } catch (error) {}\n}\n\n// search reviews by id\nasync function getDataReviewsById(id) {\n  axios.defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    page: 1,\n  };\n  try {\n    const { data } = await axios.get(`${URL_SEARCH_BY_ID}/${id}/reviews`);\n    return data.results;\n  } catch (error) {}\n}\n\nconst apiGet = {\n  popular: getDataPopularCinema,\n  movieById: getDataById,\n  getReviews: getDataReviewsById,\n  getCharacter: getDataActorById,\n  getCinemaByName: getDataByName,\n};\n\nexport default apiGet;\n"],"names":["ContainerPopularCinema","styled","CardCinema","Link","Img","CardCinemaBasement","Title","films","bool","location","useLocation","map","title","poster_path","name","id","movieLink","generatePath","routePath","movieId","imgSrc","def","to","state","from","src","alt","Wrap","Form","onSubmit","useState","setName","cleanInput","e","preventDefault","console","log","userInput","trim","toast","type","placeholder","value","onChange","newName","currentTarget","toLowerCase","cinemaObj","setCinemaObj","booleanToTitle","setBooleanToTitle","handleFormSubmit","apiGet","searchCinema","length","message","CinemaCardList","API_KEY","URL","URL_SEARCH_BY_NAME","URL_SEARCH_BY_ID","axios","api_key","language","data","results","query","cast","getDataReviewsById","page","popular","getDataPopularCinema","movieById","getDataById","getReviews","getCharacter","getDataActorById","getCinemaByName","getDataByName"],"sourceRoot":""}